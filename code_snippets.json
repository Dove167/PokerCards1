{
  "cards": [
    {
      "suit": "Spades",
      "rank": "Ace",
      "card": "Ace of Spades",
      "concept": "Block-Scoped Variable",
      "snippet": "let name = 'Jules';"
    },
    {
      "suit": "Spades",
      "rank": "King",
      "card": "King of Spades",
      "concept": "Immutable Variable",
      "snippet": "const framework = 'React';"
    },
    {
      "suit": "Spades",
      "rank": "Queen",
      "card": "Queen of Spades",
      "concept": "Key-Value Data Structure (Object)",
      "snippet": "const person = {\n  name: 'John Doe',\n  age: 30\n};"
    },
    {
      "suit": "Spades",
      "rank": "Jack",
      "card": "Jack of Spades",
      "concept": "Ordered List (Array)",
      "snippet": "const numbers = [1, 2, 3, 4, 5];"
    },
    {
      "suit": "Hearts",
      "rank": "Ace",
      "card": "Ace of Hearts",
      "concept": "Named Function",
      "snippet": "function greet(name) {\n  return `Hello, ${name}!`;\n}"
    },
    {
      "suit": "Hearts",
      "rank": "King",
      "card": "King of Hearts",
      "concept": "Arrow Function Expression",
      "snippet": "const add = (a, b) => a + b;"
    },
    {
      "suit": "Clubs",
      "rank": "Ace",
      "card": "Ace of Clubs",
      "concept": "Conditional Branching",
      "snippet": "if (score > 50) {\n  console.log('You pass!');\n} else {\n  console.log('You fail.');\n}"
    },
    {
      "suit": "Clubs",
      "rank": "King",
      "card": "King of Clubs",
      "concept": "Iterating Over a Collection",
      "snippet": "for (let i = 0; i < 5; i++) {\n  console.log(i);\n}"
    },
    {
      "suit": "Diamonds",
      "rank": "Ace",
      "card": "Ace of Diamonds",
      "concept": "Transforming Data with .map()",
      "snippet": "const numbers = [1, 2, 3];\nconst doubled = numbers.map(n => n * 2);"
    },
    {
      "suit": "Diamonds",
      "rank": "King",
      "card": "King of Diamonds",
      "concept": "Filtering Data with .filter()",
      "snippet": "const numbers = [1, 2, 3, 4, 5];\nconst evens = numbers.filter(n => n % 2 === 0);"
    }
  ]
}
